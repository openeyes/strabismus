<?php

class DatasetController extends Controller
{
	/**
	 * @var string the default layout for the views. Defaults to '//layouts/column2', meaning
	 * using two-column layout. See 'protected/views/layouts/column2.php'.
	 */
	public $layout='//layouts/column2';

	/**
	 * @return array action filters
	 */
	public function filters()
	{
		return array(
			'accessControl', // perform access control for CRUD operations
			'postOnly + delete', // we only allow deletion via POST request
		);
	}

	/**
	 * Specifies the access control rules.
	 * This method is used by the 'accessControl' filter.
	 * @return array access control rules
	 */
	public function accessRules()
	{
		return array(
			array('allow',
				'actions'=>array('create','update', 'index', 'view','quick', 'delete','admin', 'opnote'),
				'users'=>array('@'),
			),
/*			array('allow', // allow admin user to perform 'admin' and 'delete' actions
				'actions'=>array('admin'),
				'users'=>array('admin'),
			),
*/
			array('deny',  // deny all users
				'users'=>array('*'),
			),
		);
	}

	/**
	 * Displays a particular model.
	 * @param integer $id the ID of the model to be displayed
	 */
	public function actionView($id)
	{
		$this->render('view',array(
			'model'=>$this->loadModel($id),
		));
	}

	/**
	 * Displays the op note
	 * @param integer $id the ID of the model to be displayed
	 */
	public function actionOpnote($id)
	{
		$this->render('opnote',array(
			'model'=>$this->loadModel($id),
		));
	}

	/**
	 * Creates a new model.
	 * If creation is successful, the browser will be redirected to the 'view' page.
	 */
	public function actionCreate()
	{
		$model=new AdultDataset;

		// Uncomment the following line if AJAX validation is needed
		// $this->performAjaxValidation($model);

		if(isset($_POST['AdultDataset']))
		{
			if ($user = Yii::app()->user->id) {
				$model->attributes=$_POST['AdultDataset'];
				$model->userId = $user;
				if($ret = $model->save())
					$this->redirect( (isset($_POST['yt1']) ? array('opnote', 'id' => $model->id) : array('admin')));
				else
					$this->redirect(array('site','login'));
            }
		}
		else
        {
            // New Datasets should have an autogenerated UUID
            $model->uuid = $this->uuid();
            $model->plan_goals = '';
            $model->asmt_date = date("Y-m-d");
            $model->op_date = date("Y-m-d");
        }

		$this->render('create',array(
			'model'=>$model,
		));
	}

	/**
	 * Creates a new model.
	 * If creation is successful, the browser will be redirected to the 'view' page.
	 */
	public function actionQuick()
	{
		$model=new AdultDataset;

		if(isset($_POST['AdultDataset']))
		{
			if ($user = Yii::app()->user->id)
			{
				$model->attributes=$_POST['AdultDataset'];
				$model->userId = $user;
				if($ret = $model->save())
					$this->redirect( (isset($_POST['yt1']) ? array('opnote', 'id' => $model->id) : array('admin')));
				else
					$this->redirect(array('site','login'));
            }
		}
		else
        {
            // New Datasets should have an autogenerated UUID
            $model->uuid = $this->uuid();
            $model->plan_goals = '';
            $model->asmt_date = date("Y-m-d");
            $model->op_date = date("Y-m-d");
        }

		$this->render('quick',array(
			'model'=>$model,
		));
	}


	/**
	 * Updates a particular model.
	 * If update is successful, the browser will be redirected to the 'view' page.
	 * @param integer $id the ID of the model to be updated
	 */
	public function actionUpdate($id)
	{
		$model=$this->loadModel($id);

		// Uncomment the following line if AJAX validation is needed
		// $this->performAjaxValidation($model);

		if(isset($_POST['AdultDataset']))
		{
			$model->attributes=$_POST['AdultDataset'];
			if($model->save())
			{
				if(isset($_POST['yt1']))
				{
			        $this->redirect(array('opnote', 'id' => $model->id));
			    }
				else
				{
					$this->redirect(array('admin'));
				}
			}
		}

		$this->render('update',array(
			'model'=>$model,
		));
	}

	/**
	 * Deletes a particular model.
	 * If deletion is successful, the browser will be redirected to the 'admin' page.
	 * @param integer $id the ID of the model to be deleted
	 */
	public function actionDelete($id)
	{
		$this->loadModel($id)->delete();

		// if AJAX request (triggered by deletion via admin grid view), we should not redirect the browser
//		if(!isset($_GET['ajax']))
//			$this->redirect(isset($_POST['returnUrl']) ? $_POST['returnUrl'] : array('admin'));
// The above is dangerous, so I'm just disabling it for now
   	   if(!isset($_GET['ajax']))
			$this->redirect(array('admin'));
	}

	/**
	 * Manages all models.
	 */
	public function actionIndex()
	{
		$model=new AdultDataset('search');
		$model->unsetAttributes();  // clear any default values
		if(isset($_GET['AdultDataset']))
			$model->attributes=$_GET['AdultDataset'];

		$this->render('admin',array(
			'model'=>$model,
			'op_stats'=> $this->getOpStats(),
			'accuracy_stats' => $this->getAccuracyStats(),
			'safety_stats' => $this->getSafetyStats(),
		));
	}

	public function actionAdmin()
	{
		return $this->actionIndex();
	}

	public function getOpStats()
	{

		$reports = array(
		    'total_ops' => 'SELECT count(*) from tbl_adult_dataset WHERE userId=' . Yii::app()->user->id,
	    	'ops_this_year' => ('SELECT count(*) from tbl_adult_dataset WHERE userId=' . Yii::app()->user->id . ' AND date_sub(CURDATE(), INTERVAL 1 YEAR) < op_date'),
			'total_adults' => ('SELECT count(*) from tbl_adult_dataset WHERE userId=' . Yii::app()->user->id . ' AND pt_age > 16'),
	    	'adults_this_year' => ('SELECT count(*) from tbl_adult_dataset WHERE userId=' . Yii::app()->user->id . ' AND pt_age > 16 AND date_sub(CURDATE(), INTERVAL 1 YEAR) < op_date'),
	    	'total_kids' => ('SELECT count(*) from tbl_adult_dataset WHERE userId=' . Yii::app()->user->id . ' AND pt_age <= 16'),
	    	'kids_this_year' => ('SELECT count(*) from tbl_adult_dataset WHERE userId=' . Yii::app()->user->id . ' AND pt_age <= 16 AND date_sub(CURDATE(), INTERVAL 1 YEAR) < op_date'),
	    	'total_cats' => ('SELECT asmt_category, count(*) AS count_for_category FROM tbl_adult_dataset WHERE userId=' . Yii::app()->user->id . ' GROUP BY asmt_category ORDER BY asmt_category ASC'),
	    	'cats_this_year' => ('SELECT asmt_category, count(*) AS count_for_category FROM tbl_adult_dataset WHERE userId=' . Yii::app()->user->id . ' AND date_sub(CURDATE(), INTERVAL 1 YEAR) < op_date GROUP BY asmt_category ORDER BY asmt_category ASC'),
		);
		$ret = array();
		foreach ($reports as $k => $v) {
			$command = Yii::app()->db->createCommand($v);
			if ($k === 'total_cats' or $k === 'cats_this_year') {
				$rows = $command->queryAll();
				$tmp = array();
				foreach ($rows as $k2 => $v2) {
					if ($k2) {
					   $tmp[] = array('cat' => $v2['asmt_category'], 'count' => $v2['count_for_category']);
					} else {
					   $tmp[] = array('cat' => 'Uncategorised', 'count' => $v2['count_for_category']);
					}
			}
				$ret[$k] = $tmp;
			} else {
				$row = $command->queryRow();
				$ret[$k] = $row['count(*)'];
			}
		}
		return $ret;
	}

	private function cover2sign($code) {
	  switch($code) {
	    case "E/ET": return 1;
		case "X/XT": return -1;
		case "O": return 0;
		default: throw new Exception('');
	  }
	}

	private function aim($row) {
	  $aim = $row['plan_hor_target_angle'];
	  switch($row['plan_hor_target_direction']) {
	    case "eso": return $aim;
		case "exo": return -$aim;
		default: throw new Exception('');
	  }
	}

	private function result($row) {
	    $dist = $row['late_hor_angle_dist'];
		$near = $row['late_angle_near'];
		switch($row['plan_distance']) {
		  case "distance": return $dist * $this->cover2sign($row['late_cover_dist']);
		  case "near":     return $near * $this->cover2sign($row['late_cover_near']);
		  case "average":  return ($dist+$near)/2;
		  default: throw new Exception('');
		}
	}

	public function getAccuracyStats()
	{
		$command = Yii::app()->db->createCommand("SELECT * FROM tbl_adult_dataset where userId=" . Yii::app()->user->id);
		$over = 0;
		$near = 0;
		$total = 0;
		foreach ($command->queryAll() as $row) {
		    if ($row['late_unwanted_overcorrection'])
			    $over++;
			if ($row['late_outcome_near_target'])
			    $near++;
			$total++;
		}
		$unwanted = intval(100 * ($over/$total));
		$close = intval(100 * ($over/$total));
		$ret = array('unwanted' => $unwanted, 'near' => $close);
		return $ret;
	}

	public function getSafetyStats()
	{
		$reports = array(
		    'intra_this_year' => 'SELECT count(*) as cnt from tbl_adult_dataset WHERE userId=' . Yii::app()->user->id . ' AND date_sub(CURDATE(), INTERVAL 1 YEAR) < op_date AND op_comp_none=0',
			'post_this_year' => 'SELECT count(*) as cnt from tbl_adult_dataset WHERE userId=' . Yii::app()->user->id . ' AND date_sub(CURDATE(), INTERVAL 1 YEAR) < op_date AND late_comp_none=0',
			'rate_this_year' => 'SELECT format(100 * (select count(*) from tbl_adult_dataset WHERE userId=' . Yii::app()->user->id . ' AND date_sub(CURDATE(), INTERVAL 1 YEAR) < op_date AND (op_comp_none = 0 or late_comp_none = 0))/(select count(*) from tbl_adult_dataset where userId=' . Yii::app()->user->id . ' AND date_sub(curdate(), INTERVAL 1 YEAR) < op_date),0) as cnt',
			'rate_long_term' => 'SELECT format(100 * (select count(*) from tbl_adult_dataset WHERE userId=' . Yii::app()->user->id . ' AND (op_comp_none = 0 or late_comp_none = 0))/(select count(*) from tbl_adult_dataset where userId=' . Yii::app()->user->id . '),0) as cnt',
		);
		$ret = array();
		foreach ($reports as $k => $v) {
			$command = Yii::app()->db->createCommand($v);
			$row = $command->queryRow();
			$ret[$k] = $row['cnt'];
		}
		return $ret;
	}
	/**
	 * Returns the data model based on the primary key given in the GET variable.
	 * If the data model is not found, an HTTP exception will be raised.
	 * @param integer $id the ID of the model to be loaded
	 * @return AdultDataset the loaded model
	 * @throws CHttpException
	 */
	public function loadModel($id)
	{
		$model=AdultDataset::model()->findByPk($id);
		if($model===null)
			throw new CHttpException(404,'The requested page does not exist.');
		return $model;
	}

	/**
	 * Performs the AJAX validation.
	 * @param AdultDataset $model the model to be validated
	 */
	protected function performAjaxValidation($model)
	{
		if(isset($_POST['ajax']) && $_POST['ajax']==='adult-dataset-form')
		{
			echo CActiveForm::validate($model);
			Yii::app()->end();
		}
	}
}
